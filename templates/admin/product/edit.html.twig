{% extends 'base.html.twig' %}

{% block title %}Admin - Modifier produit{% endblock %}

{% block body %}
<div class="container py-5">
    <h1 class="h3 mb-4">Modifier produit</h1>
    <div class="card">
        <div class="card-body">
            {{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}
            
            <!-- Affichage de l'image actuelle -->
            {% if product.mainImage %}
                <div class="mb-3">
                    <label class="form-label">Image principale actuelle :</label>
                    <div>
                        <img src="{{ product.mainImage }}" alt="Image principale actuelle" class="image-preview" style="max-width: 200px; max-height: 200px;">
                    </div>
                </div>
            {% endif %}
            
            {% if product.images is not empty %}
                <div class="mb-3">
                    <label class="form-label">Images supplémentaires actuelles :</label>
                    <div class="image-preview-container">
                        {% for image in product.images %}
                            <img src="{{ image }}" alt="Image supplémentaire" class="image-preview" style="max-width: 150px; max-height: 150px;">
                        {% endfor %}
                    </div>
                </div>
            {% endif %}
            
            {{ form_widget(form) }}
            <div class="mt-3 d-flex gap-2">
                <button type="submit" class="btn btn-primary">Mettre à jour</button>
                <a href="{{ path('admin_product_index') }}" class="btn btn-outline-secondary">Retour</a>
            </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<script>
// Aperçu de l'image principale
function previewImage(input) {
    const preview = document.getElementById('main-image-preview');
    if (!preview) return;
    
    preview.innerHTML = '';
    
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const img = document.createElement('img');
            img.src = e.target.result;
            img.style.maxWidth = '200px';
            img.style.maxHeight = '200px';
            img.style.borderRadius = '8px';
            img.style.marginTop = '10px';
            img.alt = 'Aperçu de la nouvelle image principale';
            preview.appendChild(img);
        };
        reader.readAsDataURL(input.files[0]);
    }
}

// Aperçu des images supplémentaires
function previewMultipleImages(input) {
    const preview = document.getElementById('additional-images-preview');
    if (!preview) return;
    
    preview.innerHTML = '';
    
    if (input.files) {
        Array.from(input.files).forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.style.maxWidth = '150px';
                img.style.maxHeight = '150px';
                img.style.borderRadius = '8px';
                img.style.margin = '5px';
                img.alt = `Aperçu ${index + 1}`;
                preview.appendChild(img);
            };
            reader.readAsDataURL(file);
        });
    }
}
</script>
{% endblock %}


